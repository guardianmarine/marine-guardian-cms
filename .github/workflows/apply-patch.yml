name: Apply patch from issue

on:
  issues:
    types: [labeled]
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    if: github.event_name == 'workflow_dispatch' || (github.event.label.name == 'apply-patch')
    runs-on: ubuntu-latest
    env:
      ISSUE_NUMBER: ${{ github.event.issue.number }}
      REPO: ${{ github.repository }}
      # Base = rama por defecto del repo (ej. main). GitHub siempre manda este dato.
      BASE_BRANCH: ${{ github.event.repository.default_branch }}
      WORK_BRANCH: patch/issue-${{ github.event.issue.number || 'manual' }}-${{ github.run_id }}

    steps:
      - name: Set up job
        run: echo "Start"

      - name: Checkout (historia completa)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Definir rama base (desde evento)
        run: |
          echo "BASE_BRANCH=${BASE_BRANCH:-main}" >> $GITHUB_ENV
          echo "WORK_BRANCH=${WORK_BRANCH}" >> $GITHUB_ENV
          echo "Base: $BASE_BRANCH | Work: $WORK_BRANCH"

      - name: Extraer bloque ```patch``` del issue/comentarios
        id: grab
        env:
          BODY: ${{ github.event.issue.body }}
        run: |
          set -e
          printf '%s\n' "$BODY" > issue.md
          awk '/```patch/{flag=1;next}/```/{if(flag){exit}}flag' issue.md > changes.patch || true
          if [ ! -s changes.patch ]; then
            echo "No se encontró bloque ```patch``` en el cuerpo del issue."
            exit 1
          fi
          echo "Patch encontrado:"
          wc -l changes.patch

      - name: Crear rama de trabajo y aplicar patch
        run: |
          set -e
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name  "github-actions[bot]"

          git switch -c "$WORK_BRANCH"

          echo "==> Intentando aplicar patch (modo normal)"
          if git apply --index --3way changes.patch 2>/dev/null; then
            echo "==> Estado tras aplicar:"
            git status --porcelain
          else
            echo "==> Patch simple falló, intentando 3-way con --reject"
            git apply --3way --reject changes.patch
            git add -A
          fi

          echo "==> Diff (no index):"
          git --no-pager diff

          echo "==> Diff staged:"
          git --no-pager diff --staged | cat

          if git diff --cached --quiet; then
            echo "NO_CHANGES=true" >> $GITHUB_ENV
            echo "No hay cambios para commitear."
          else
            echo "NO_CHANGES=false" >> $GITHUB_ENV
            git commit -m "Apply patch from issue #${ISSUE_NUMBER}"
          fi

      - name: Push de la rama
        if: env.NO_CHANGES == 'false'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git push "https://x-access-token:${GH_TOKEN}@github.com/${REPO}.git" "HEAD:${WORK_BRANCH}"

      # === PR ROBUSTO CON GH CLI ===
      - name: Crear o actualizar PR
        if: env.NO_CHANGES == 'false'
        id: pr
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -e
          echo "Creando/actualizando PR: base=${BASE_BRANCH} head=${WORK_BRANCH}"
          # ¿Ya existe un PR abierto con esta head?
          PR_JSON=$(gh pr list --repo "$REPO" --state open --head "$WORK_BRANCH" --json number,url)
          PR_NUM=$(echo "$PR_JSON" | jq -r '.[0].number // empty')
          if [ -n "$PR_NUM" ]; then
            echo "PR ya existe: #$PR_NUM"
          else
            gh pr create \
              --repo "$REPO" \
              --base "$BASE_BRANCH" \
              --head "$WORK_BRANCH" \
              --title "Apply patch from issue #${ISSUE_NUMBER}" \
              --body "This PR was created automatically from issue #${ISSUE_NUMBER}."
          fi
          # Log final (número y URL)
          gh pr view "$WORK_BRANCH" --repo "$REPO" --json number,url -q '.number, .url' | paste -sd' ' - > pr.txt
          echo "pr_out=$(cat pr.txt)" >> $GITHUB_OUTPUT

      - name: Log de PR creado
        if: env.NO_CHANGES == 'false'
        run: |
          echo "PR -> ${{ steps.pr.outputs.pr_out }}"

      - name: Comentar en el issue si no hay cambios
        if: env.NO_CHANGES == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ env.ISSUE_NUMBER }}
          body: |
            No se crearon cambios a partir del patch (no hay diff). No se generó PR.
